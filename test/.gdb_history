p root
p *root
p *root->child 
p *root->child ->next 
p *root->child ->next ->child 
q
l
l
b 43 i == 8
b 43 //i == 8
b 43
condition 1 i == 8
c
r
n
p i
r
s
r
s
n
p path
p *path
p *root
p *root->child 
p *root->child ->next 
p *root->child ->next ->child 
q
b main
r
n
s
n
p *root
n
n
p *root
p *root->child 
p *root->child ->next 
p *root->child ->next ->child 
p *root->child ->next ->child ->child 
p *root->child ->next ->child ->next 
n
p in_index_p 
p *in_index_p 
n
n
p *
p *p
p *p->child 
p *p->child ->child 
s
fin
s
n
n
p *p
p *root
p *root->child 
p *root->child ->next 
n
n
n
s
n
q
b main
r
s
n
s
fin
s
n
p *root
p *root->child 
p *root->child ->next 
p *root->child ->next ->child 
p *root->child ->next ->child ->next 
p *p
n
q
b main
r
s
n
s
fin
s
n
p *p
n
n
n
q
b main
r
s
n
n
s
fin
s
n
p *root 
p *root->child 
p *root->child ->next 
p *root->child ->next ->child 
p *root->child ->next ->child ->next 
r
s
s
n
b path_remove 
c
p *path
p *path->child 
p *path->child ->next 
p *path->child ->child 
n
p *p
p *p->parent 
qq
q
b main
r
s
n
s
fin
s
n
p *ptmp 
n
n
s
p ptmp 
p *ptmp 
p p->next 
q
b main
r
s
n
s
fin
s
n
s
n
p err
n
s
p p
p *p
s
n
p err
n
p ptr
p/x ptr
q
b main
r
s
n
s
fin
s
b
n
s
s
p ptr
p/x ptr
n
p et
p/x et
n
p ptr
p/x ptr
p/x ~BLOCK_MASK & ptr
p/x ~0xfff & ptr
p/x et.table[0]
n
p i
p/x ptr
p/x et
n
q
b main
r
s
s
n
b entry_destroy 
c
n
p block_ptr 
p/x block_ptr 
n
p inblock_ptr 
p/x inblock_ptr 
p/x ptr
c
p/x ptr
q
b main
r
n
s
n
s
fin
s
n
p *p
p/x *p
n
p *p
p/x *p
s
n
p block_ptr 
p/x block_ptr 
n
p/x et
p block_ptr 
p/x block_ptr 
n
n
p j
p sizeof(entry_t)
p inblock_ptr 
p inblock_ptr / 128
p inblock_ptr / 128.0
p inblock_ptr / 127.0
p inblock_ptr / 128.0
n
n
p err
n
p err
n
p err
n
p err
n
p err
s
n
p err
n
p err
n
q
